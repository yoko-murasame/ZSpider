{"ruleConfig":"/*eslint-disable*/\r\nconst puppeteer = require('puppeteer-core')\r\nconst XLSX = require('xlsx')\r\nconst moment = require('moment')\r\n// const fs = require('fs')\r\n// const cheerio = require('cheerio')\r\nconst path = require('path')\r\nconst os = require('os')\r\n\r\nlet chromePath = 'C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe'\r\nlet browser, page\r\n\r\nasync function spider() {\r\n\r\n  browser = await puppeteer.launch({\r\n    headless: true,\r\n    executablePath: chromePath,\r\n    args: [\r\n      // 禁用一些功能\r\n      '--no-sandbox', // 沙盒模式\r\n      '--disable-setuid-sandbox', // uid沙盒\r\n      '--disable-dev-shm-usage', // 创建临时文件共享内存\r\n      '--disable-accelerated-2d-canvas', // canvas渲染\r\n      '--disable-gpu', // GPU硬件加速\r\n    ],\r\n    ignoreDefaultArgs: ['--enable-automation'],\r\n  })\r\n  page = await browser.newPage()\r\n\r\n  let 收集区域 = ['鹿城区', '龙湾区', '瓯海区', '洞头区', '永嘉县', '平阳县', '苍南县', '文成县', '泰顺县', '瑞安市', '乐清市', '龙港市']\r\n  let 查询天数 = 2\r\n\r\n  let xlsDatas = 收集区域.map(区域 => ({ '县（区、市）': 区域 }))\r\n\r\n  for (let i = 查询天数 - 1; i >= 0; i--) {\r\n    let 实际日期 = moment().subtract(i, 'days')\r\n    let 日期字符串 = 实际日期.format('YYYY-MM-DD')\r\n    let 最早时刻 = 实际日期.startOf('day').format('YYYY-MM-DDTHH:mm:ss')\r\n    let 最后时刻 = 实际日期.endOf('day').format('YYYY-MM-DDTHH:mm:ss')\r\n    console.log(`日期：${日期字符串}，最早时刻：${最早时刻}，最后时刻：${最后时刻}`)\r\n    // 雨量nuxt地址：https://sqfb.jhhk.zjsw.cn:8089/nuxtsyq/new/realtimeRain?areaFlag=1&sss=温州市&ssx&st=2023-12-17T00:00:00&et=2023-12-17T23:59:59&ly&max&min=0&bool=false&bxdj=1,2,3,4,5,&zm&type=0&lx=QX,ME,SX,DS&progress=false\r\n    let rainfallUrl = `https://sqfb.jhhk.zjsw.cn:8089/nuxtsyq/new/realtimeRain?areaFlag=1&sss=温州市&ssx&st=${最早时刻}&et=${最后时刻}&ly&max&min=0&bool=false&bxdj=1,2,3,4,5,&zm&type=0&lx=QX,ME,SX,DS&progress=false`\r\n    console.log(`日期：${日期字符串}，地址：${rainfallUrl}`)\r\n    // 打开页面\r\n    await page.goto(rainfallUrl)\r\n    console.log(`日期：${日期字符串}，页面打开`)\r\n    // 点击分区统计\r\n    await page.click('div.tab > div:nth-child(2)')\r\n    // await page.waitForTimeout(2000); // 这个延时会在vm环境中执行失败\r\n    console.log(`日期：${日期字符串}，页面加载完成`)\r\n\r\n    // 分析dom table\r\n    let data = await page.$$eval('div.el-table__fixed-body-wrapper > table > tbody > tr',\r\n      (rows, 日期字符串, 收集区域, xlsDatas) => {\r\n        return rows.map((row) => {\r\n          const columns = Array.from(row.querySelectorAll('td'))\r\n          const dataObj = {}\r\n          let targetObj = null\r\n          for (let i = 0; i < columns.length; i++) {\r\n            const td = columns[i]\r\n            // 填充数据\r\n            switch (i) {\r\n              case 0:\r\n                // 区域\r\n                const 区域 = td.querySelector('.cell.el-tooltip').textContent\r\n                if (!收集区域.includes(区域)) {\r\n                  return\r\n                }\r\n                // dataObj['县（区、市）'] = 区域\r\n                targetObj = xlsDatas.find(item => item['县（区、市）'] === 区域)\r\n                break\r\n              case 1:\r\n                // 降水量\r\n                // dataObj[今天字符串] = td.querySelector('div').textContent\r\n                if (targetObj) {\r\n                  targetObj[日期字符串] = td.querySelector('div').textContent\r\n                }\r\n                break\r\n              default:\r\n                break\r\n            }\r\n          }\r\n          return targetObj\r\n        })\r\n      }, 日期字符串, 收集区域, xlsDatas)\r\n\r\n    // 去除空行\r\n    data = data.filter(item => item)\r\n    xlsDatas = data\r\n    console.log(xlsDatas)\r\n    console.log(`日期：${日期字符串}，爬取完成`)\r\n  }\r\n\r\n  await browser.close()\r\n\r\n  console.log('处理数据完成，导出Execl。')\r\n\r\n  // 导出数据\r\n  const ws = XLSX.utils.json_to_sheet(xlsDatas)\r\n  const wb = XLSX.utils.book_new()\r\n  XLSX.utils.book_append_sheet(wb, ws, 'Sheet1')\r\n  // 保存桌面\r\n  const homedir = os.homedir();\r\n  const desktopPath = 'desktop'\r\n  const fileName = `降水量数据-截至${moment().format('YYYY-MM-DD-HHmmss')}-共${查询天数}天.xlsx`\r\n  const filePath = path.join(homedir, desktopPath, fileName)\r\n  console.log(filePath)\r\n  XLSX.writeFile(wb, filePath)\r\n\r\n}\r\n\r\nspider()\r\n","type":"code"}